version: '3.8'

services:
  server:
    build:
      context: ../server
      dockerfile: ../docker/server.Dockerfile
    environment:
      - RAILS_ENV=${RAILS_ENV:-production}
      - POSTGRES_HOST=db
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - rigel-network

  db:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-rigel_development}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - rigel-network

  redis:
    image: redis:7
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - rigel-network

volumes:
  postgres-data:
  redis-data:

networks:
  rigel-network:
    driver: bridge 